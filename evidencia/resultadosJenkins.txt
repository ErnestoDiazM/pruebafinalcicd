Lanzada por el usuario Ernesto Diaz

[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins 
 in C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Clonar Repositorio)
[Pipeline] echo
Clonando repositorio...
[Pipeline] git
The recommended git tool is: NONE
No credentials specified
 > git.exe rev-parse --resolve-git-dir C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1\.git # timeout=10
Fetching changes from the remote Git repository
 > git.exe config remote.origin.url https://github.com/ErnestoDiazM/pruebafinalcicd.git # timeout=10
Fetching upstream changes from https://github.com/ErnestoDiazM/pruebafinalcicd.git
 > git.exe --version # timeout=10
 > git --version # 'git version 2.48.1.windows.1'
 > git.exe fetch --tags --force --progress -- https://github.com/ErnestoDiazM/pruebafinalcicd.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git.exe rev-parse "refs/remotes/origin/master^{commit}" # timeout=10
Checking out Revision 865795fa796fc0ebb1b0d23a617c3c5a567e54c3 (refs/remotes/origin/master)
 > git.exe config core.sparsecheckout # timeout=10
 > git.exe checkout -f 865795fa796fc0ebb1b0d23a617c3c5a567e54c3 # timeout=10
 > git.exe branch -a -v --no-abbrev # timeout=10
 > git.exe branch -D master # timeout=10
 > git.exe checkout -b master 865795fa796fc0ebb1b0d23a617c3c5a567e54c3 # timeout=10
Commit message: "se añade funcionalidad, pruebas y configuraciones necesarias para completar el desafio"
First time build. Skipping changelog.
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Crear package.json)
[Pipeline] echo
Verificando package.json...
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>if not exist package.json (
echo Creating package.json  
 echo {  1>package.json  
 echo   "name": "ci_pipeline_project",  1>>package.json  
 echo   "version": "1.0.0",  1>>package.json  
 echo   "main": "app.js",  1>>package.json  
 echo   "scripts": {  1>>package.json  
 echo     "test": "jest"  1>>package.json  
 echo   },  1>>package.json  
 echo   "dependencies": {  1>>package.json  
 echo     "express": "^4.18.2"  1>>package.json  
 echo   },  1>>package.json  
 echo   "devDependencies": {  1>>package.json  
 echo     "jest": "^29.4.1",  1>>package.json  
 echo     "supertest": "^6.3.3"  1>>package.json  
 echo   }  1>>package.json  
 echo }  1>>package.json 
) 
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Instalar Dependencias)
[Pipeline] echo
Instalando dependencias...
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>npm install 
npm warn deprecated inflight@1.0.6: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
npm warn deprecated glob@7.2.3: Glob versions prior to v9 are no longer supported
npm warn deprecated superagent@8.1.2: Please upgrade to v9.0.0+ as we have fixed a public vulnerability with formidable dependency. Note that v9.0.0+ requires Node.js v14.18.0+. See https://github.com/ladjs/superagent/pull/1800 for insight. This project is supported and maintained by the team at Forward Email @ https://forwardemail.net

added 355 packages, and audited 356 packages in 16s

48 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Iniciar Servidor)
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>if not exist db.json (
echo Creating db.json  
 echo {  1>db.json  
 echo   "users": [  1>>db.json  
 echo     { "id": 1, "name": "Usuario 1" },  1>>db.json  
 echo     { "id": 2, "name": "Usuario 2" }  1>>db.json  
 echo   ]  1>>db.json  
 echo }  1>>db.json 
) 
[Pipeline] echo
Iniciando servidor...
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>start /b npx json-server --watch db.json --port 3000 
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>ping -n 6 127.0.0.1  1>nul 
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>powershell -command "try { Invoke-WebRequest -Uri http://localhost:3000/users -UseBasicParsing } catch { echo 'Error: El servidor no responde' }" 


StatusCode        : 200
StatusDescription : OK
Content           : [{"id":1,"name":"Alice","email":"alice@example.com"},{"id":2,"name":"Bob","email":"bob@example.com"
                    }]
RawContent        : HTTP/1.1 200 OK
                    Connection: keep-alive
                    Keep-Alive: timeout=5
                    Content-Length: 101
                    Content-Type: application/json; charset=utf-8
                    Date: Fri, 04 Apr 2025 01:11:37 GMT
                    ETag: W/"65-00Blfg5stwDarEQMC7z...
Forms             : 
Headers           : {[Connection, keep-alive], [Keep-Alive, timeout=5], [Content-Length, 101], [Content-Type, 
                    application/json; charset=utf-8]...}
Images            : {}
InputFields       : {}
Links             : {}
ParsedHtml        : 
RawContentLength  : 101



[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>powershell -command "try { Get-Process -Name node | Where-Object {$_.CommandLine -like '*json-server*'} | Stop-Process } catch { echo 'No hay instancias de json-server para terminar' }" 
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Ejecutar Pruebas)
[Pipeline] echo
Ejecutando pruebas...
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>npm test   || echo "Las pruebas fallaron pero continuamos" 

> ci_pipeline_project@1.0.0 test
> jest

PASS tests/app.test.js
  API Tests
    √ should return a list of users (26 ms)
    √ should return a single user (4 ms)

Test Suites: 1 passed, 1 total
Tests:       2 passed, 2 total
Snapshots:   0 total
Time:        0.772 s
Ran all test suites.
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Construir Imagen Docker)
[Pipeline] echo
Construyendo imagen Docker...
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>docker build -t express-api . 
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 160B 0.0s done
#1 DONE 0.1s

#2 [internal] load metadata for docker.io/library/node:14
#2 DONE 2.2s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.1s

#4 [internal] load build context
#4 ...

#5 [1/5] FROM docker.io/library/node:14@sha256:a158d3b9b4e3fa813fa6c8c590b8f0a860e015ad4e59bbce5744d2f6fd8461aa
#5 resolve docker.io/library/node:14@sha256:a158d3b9b4e3fa813fa6c8c590b8f0a860e015ad4e59bbce5744d2f6fd8461aa 0.1s done
#5 DONE 0.9s

#4 [internal] load build context
#4 transferring context: 10.34MB 4.9s
#4 ...

#5 [1/5] FROM docker.io/library/node:14@sha256:a158d3b9b4e3fa813fa6c8c590b8f0a860e015ad4e59bbce5744d2f6fd8461aa
#5 sha256:0d27a8e861329007574c6766fba946d48e20d2c8e964e873de352603f22c4ceb 450B / 450B 0.2s done
#5 sha256:0c8cc2f24a4dcb64e602e086fc9446b0a541e8acd9ad72d2e90df3ba22f158b3 2.29MB / 2.29MB 0.5s done
#5 sha256:5f32ed3c3f278edda4fc571c880b5277355a29ae8f52b52cdf865f058378a590 33.55MB / 35.24MB 4.4s
#5 sha256:6f51ee005deac0d99898e41b8ce60ebf250ebe1a31a0b03f613aec6bbc9b83d8 4.19kB / 4.19kB 0.6s done
#5 sha256:d9a8df5894511ce28a05e2925a75e8a4acbd0634c39ad734fdfba8e23d1b1569 72.35MB / 191.85MB 6.9s
#5 sha256:1de76e268b103d05fa8960e0f77951ff54b912b63429c34f5d6adfd09f5f9ee2 51.88MB / 51.88MB 5.6s done
#5 sha256:3d2201bd995cccf12851a50820de03d34a17011dcbb9ac9fdf3a50c952cbb131 10.00MB / 10.00MB 1.4s done
#5 sha256:b253aeafeaa7e0671bb60008df01de101a38a045ff7bc656e3b0fbfc7c05cca5 7.86MB / 7.86MB 1.4s done
#5 sha256:2ff1d7c41c74a25258bfa6f0b8adb0a727f84518f55f65ca845ebc747976c408 45.09MB / 50.45MB 3.6s
#5 sha256:2ff1d7c41c74a25258bfa6f0b8adb0a727f84518f55f65ca845ebc747976c408 48.23MB / 50.45MB 3.8s
#5 sha256:2ff1d7c41c74a25258bfa6f0b8adb0a727f84518f55f65ca845ebc747976c408 50.45MB / 50.45MB 3.9s done
#5 extracting sha256:2ff1d7c41c74a25258bfa6f0b8adb0a727f84518f55f65ca845ebc747976c408
#5 sha256:d9a8df5894511ce28a05e2925a75e8a4acbd0634c39ad734fdfba8e23d1b1569 84.93MB / 191.85MB 7.4s
#5 sha256:d9a8df5894511ce28a05e2925a75e8a4acbd0634c39ad734fdfba8e23d1b1569 96.47MB / 191.85MB 7.7s
#5 sha256:d9a8df5894511ce28a05e2925a75e8a4acbd0634c39ad734fdfba8e23d1b1569 106.95MB / 191.85MB 8.0s
#5 sha256:d9a8df5894511ce28a05e2925a75e8a4acbd0634c39ad734fdfba8e23d1b1569 123.73MB / 191.85MB 8.4s
#5 sha256:d9a8df5894511ce28a05e2925a75e8a4acbd0634c39ad734fdfba8e23d1b1569 135.27MB / 191.85MB 8.7s
#5 sha256:d9a8df5894511ce28a05e2925a75e8a4acbd0634c39ad734fdfba8e23d1b1569 150.99MB / 191.85MB 9.2s
#5 sha256:d9a8df5894511ce28a05e2925a75e8a4acbd0634c39ad734fdfba8e23d1b1569 168.82MB / 191.85MB 9.8s
#5 sha256:d9a8df5894511ce28a05e2925a75e8a4acbd0634c39ad734fdfba8e23d1b1569 180.36MB / 191.85MB 10.1s
#5 extracting sha256:2ff1d7c41c74a25258bfa6f0b8adb0a727f84518f55f65ca845ebc747976c408 3.1s done
#5 extracting sha256:b253aeafeaa7e0671bb60008df01de101a38a045ff7bc656e3b0fbfc7c05cca5
#5 sha256:d9a8df5894511ce28a05e2925a75e8a4acbd0634c39ad734fdfba8e23d1b1569 190.84MB / 191.85MB 10.4s
#5 sha256:d9a8df5894511ce28a05e2925a75e8a4acbd0634c39ad734fdfba8e23d1b1569 191.85MB / 191.85MB 10.6s done
#5 extracting sha256:b253aeafeaa7e0671bb60008df01de101a38a045ff7bc656e3b0fbfc7c05cca5 0.4s done
#5 extracting sha256:3d2201bd995cccf12851a50820de03d34a17011dcbb9ac9fdf3a50c952cbb131
#5 extracting sha256:3d2201bd995cccf12851a50820de03d34a17011dcbb9ac9fdf3a50c952cbb131 0.2s done
#5 extracting sha256:1de76e268b103d05fa8960e0f77951ff54b912b63429c34f5d6adfd09f5f9ee2
#5 extracting sha256:1de76e268b103d05fa8960e0f77951ff54b912b63429c34f5d6adfd09f5f9ee2 1.6s done
#5 extracting sha256:d9a8df5894511ce28a05e2925a75e8a4acbd0634c39ad734fdfba8e23d1b1569
#5 ...

#4 [internal] load build context
#4 transferring context: 24.97MB 18.1s
#4 ...

#5 [1/5] FROM docker.io/library/node:14@sha256:a158d3b9b4e3fa813fa6c8c590b8f0a860e015ad4e59bbce5744d2f6fd8461aa
#5 extracting sha256:d9a8df5894511ce28a05e2925a75e8a4acbd0634c39ad734fdfba8e23d1b1569 5.0s done
#5 extracting sha256:6f51ee005deac0d99898e41b8ce60ebf250ebe1a31a0b03f613aec6bbc9b83d8
#5 extracting sha256:6f51ee005deac0d99898e41b8ce60ebf250ebe1a31a0b03f613aec6bbc9b83d8 0.0s done
#5 extracting sha256:5f32ed3c3f278edda4fc571c880b5277355a29ae8f52b52cdf865f058378a590
#5 ...

#4 [internal] load build context
#4 transferring context: 27.87MB 19.8s done
#4 DONE 19.9s

#5 [1/5] FROM docker.io/library/node:14@sha256:a158d3b9b4e3fa813fa6c8c590b8f0a860e015ad4e59bbce5744d2f6fd8461aa
#5 extracting sha256:5f32ed3c3f278edda4fc571c880b5277355a29ae8f52b52cdf865f058378a590 1.5s done
#5 extracting sha256:0c8cc2f24a4dcb64e602e086fc9446b0a541e8acd9ad72d2e90df3ba22f158b3
#5 extracting sha256:0c8cc2f24a4dcb64e602e086fc9446b0a541e8acd9ad72d2e90df3ba22f158b3 0.1s done
#5 extracting sha256:0d27a8e861329007574c6766fba946d48e20d2c8e964e873de352603f22c4ceb 0.0s done
#5 DONE 20.3s

#6 [2/5] WORKDIR /app
#6 DONE 3.1s

#7 [3/5] COPY package*.json ./
#7 DONE 1.4s

#8 [4/5] RUN npm install
#8 1.882 npm WARN read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@3. I'll try to do my best with it!
#8 3.661 npm WARN deprecated superagent@8.1.2: Please upgrade to v9.0.0+ as we have fixed a public vulnerability with formidable dependency. Note that v9.0.0+ requires Node.js v14.18.0+. See https://github.com/ladjs/superagent/pull/1800 for insight. This project is supported and maintained by the team at Forward Email @ https://forwardemail.net
#8 4.286 npm WARN deprecated glob@7.2.3: Glob versions prior to v9 are no longer supported
#8 5.930 npm WARN deprecated inflight@1.0.6: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
#8 13.13 npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^2.3.2 (node_modules/jest-haste-map/node_modules/fsevents):
#8 13.13 npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.3: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})
#8 13.14 npm WARN ci_pipeline_project@1.0.0 No description
#8 13.14 npm WARN ci_pipeline_project@1.0.0 No repository field.
#8 13.15 npm WARN ci_pipeline_project@1.0.0 No license field.
#8 13.15 
#8 13.15 added 357 packages from 262 contributors and audited 358 packages in 11.292s
#8 13.24 
#8 13.24 48 packages are looking for funding
#8 13.24   run `npm fund` for details
#8 13.24 
#8 13.24 found 0 vulnerabilities
#8 13.24 
#8 DONE 19.5s

#9 [5/5] COPY . .
#9 DONE 0.7s

#10 exporting to image
#10 exporting layers
#10 exporting layers 2.5s done
#10 exporting manifest sha256:a1571200b375ac52b7cc01eb73799539f7dc05199edc3cfd1dbfb8ca8056c08b 0.0s done
#10 exporting config sha256:31793318e7c02bd3aad825e28cd0db3ef5411ed57b71683d24af3fd738e41632 0.0s done
#10 exporting attestation manifest sha256:e5119a50220b3f79f60069903f574f8d6ca6abff173ba3c4b3db5726470795f7 0.1s done
#10 exporting manifest list sha256:95ba7d62378107118ab662709580402c68eeb50b1af86d7f9a6396263f4a6d99
#10 exporting manifest list sha256:95ba7d62378107118ab662709580402c68eeb50b1af86d7f9a6396263f4a6d99 0.0s done
#10 naming to docker.io/library/express-api:latest done
#10 unpacking to docker.io/library/express-api:latest
#10 unpacking to docker.io/library/express-api:latest 2.1s done
#10 DONE 4.8s
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Ejecutar Contenedor Docker)
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>docker ps -q --filter "name=express-app"   | findstr /r "."   && (
echo Deteniendo contenedor existente...  
 docker stop express-app  
 docker rm express-app 
)  || echo No hay contenedor existente para detener 
31062f1eb7c9
Deteniendo contenedor existente...
express-app
express-app
[Pipeline] echo
Iniciando contenedor Docker...
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>docker run -d -p 3001:3000 --name express-app express-api 
91e70d12b1a16fb761bdfe7f29670e19463046ebb8c9401393377c5b4deb919c
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>ping -n 6 127.0.0.1  1>nul 
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>powershell -command "try { Invoke-WebRequest -Uri http://localhost:3001/users -UseBasicParsing } catch { echo 'Error: El contenedor Docker no responde'; exit 1 }" 


StatusCode        : 200
StatusDescription : OK
Content           : [{"id":1,"name":"Alice","email":"alice@example.com"},{"id":2,"name":"Bob","email":"bob@example.com"
                    }]
RawContent        : HTTP/1.1 200 OK
                    Connection: keep-alive
                    Keep-Alive: timeout=5
                    Content-Length: 101
                    Content-Type: application/json; charset=utf-8
                    Date: Fri, 04 Apr 2025 01:12:53 GMT
                    ETag: W/"65-00Blfg5stwDarEQMC7z...
Forms             : 
Headers           : {[Connection, keep-alive], [Keep-Alive, timeout=5], [Content-Length, 101], [Content-Type, 
                    application/json; charset=utf-8]...}
Images            : {}
InputFields       : {}
Links             : {}
ParsedHtml        : 
RawContentLength  : 101



[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Generar Reporte)
[Pipeline] echo
Generando reporte detallado...
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>echo # Reporte de Pruebas  1>REPORT.md 
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>echo ## Resultados de las pruebas  1>>REPORT.md 
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>echo Las pruebas se ejecutaron el 03-04-2025 22:12:54,72  1>>REPORT.md 
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>echo ### Detalles  1>>REPORT.md 
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>echo - Total de pruebas: 2  1>>REPORT.md 
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>echo - Pruebas exitosas: 2  1>>REPORT.md 
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>echo - Pruebas fallidas: 0  1>>REPORT.md 
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>echo ## Despliegue Docker  1>>REPORT.md 
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>echo - Imagen Docker: express-api  1>>REPORT.md 
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>echo - Contenedor: express-app  1>>REPORT.md 
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>echo - Puerto: 3001  1>>REPORT.md 
[Pipeline] archiveArtifacts
Guardando archivos
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
Limpiando el entorno...
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\Jenkins1>powershell -command "try { Get-Process -Name node | Where-Object {$_.CommandLine -like '*json-server*'} | Stop-Process -Force } catch { echo 'No hay instancias de json-server para terminar' }" 
[Pipeline] echo
Pipeline ejecutado correctamente: Todas las pruebas pasaron y el contenedor Docker está en ejecución.
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
